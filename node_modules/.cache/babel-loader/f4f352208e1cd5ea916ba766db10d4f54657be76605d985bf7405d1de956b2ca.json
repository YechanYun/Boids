{"ast":null,"code":"var _jsxFileName = \"/home/yechan/imperial/side_projects/birds-flocking/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\n// import { motion } from 'framer-motion'\nimport './App.css';\nimport { Bird } from './Bird.js';\nimport { BIRDS_NUM, CANVAS_HEIGHT, CANVAS_WIDTH } from './constants';\nimport { nearbyBirds } from './utilities.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let initialBirds = Array.from({\n    length: BIRDS_NUM\n  }, () => new Bird(Math.random() * CANVAS_WIDTH, Math.random() * CANVAS_HEIGHT, Math.random() * 30, Math.random() * 30));\n  const [birds, setBirds] = useState(initialBirds);\n  const canvasRef = useRef(null);\n  const prevTimestamp = useRef(null);\n  console.log(\"START HERERE\");\n  birds.forEach(b => {\n    if (!(b instanceof Bird)) {\n      console.log(\"NOT A BIRD: \", b);\n    }\n  });\n\n  /*\n  // initialisation - called only after the first render - since dependencies is empty list\n  useEffect(() => \n    {\n      let initialBirds = Array(new Bird(\n        Math.random() * CANVAS_WIDTH, Math.random() * CANVAS_HEIGHT, Math.random() * 30, Math.random() * 30\n      ), BIRDS_NUM)      \n       // after setBirds called, rendering\n      setBirds(initialBirds)\n    }, [])\n  */\n  // called everytime setBirds is called\n  useEffect(timestamp => {\n    console.log(\"insides\");\n    const ctx = canvasRef.current.getContext('2d');\n    const updateFrame = () => {\n      if (!prevTimestamp) {\n        prevTimestamp.current = timestamp;\n      }\n      const deltaTime = (timestamp - prevTimestamp) / 1000; // convert into seconds\n      prevTimestamp.current = timestamp;\n      console.log(\"UNDERNEATH HERERE\");\n      birds.forEach(b => {\n        if (!(b instanceof Bird)) {\n          console.log(\"NOT A BIRD: \", b);\n        }\n      });\n      birds.forEach(b => {\n        let others = nearbyBirds(b, birds);\n        // b.separate(others);\n        b.align(others);\n        b.cohere(others);\n        b.screenTurn(others);\n      });\n      birds.forEach(b => b.update(deltaTime));\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      birds.forEach(b => {\n        ctx.beginPath();\n        ctx.arc(b.x, b.y, 20, 0, 2 * Math.PI); // Circle centered at (100, 100) with radius 20\n        ctx.fillStyle = 'blue'; // Fill color\n        ctx.fill(); // Fill the circle with the blue color\n        ctx.closePath(); // Close the path\n      });\n\n      // setBirds(newBirds)\n      requestAnimationFrame(updateFrame);\n    };\n    updateFrame();\n  }, birds);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Animation Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT,\n      style: {\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5K/hsN4B++bcT5Nf59J7ThOn1rY=\");\n_c = App;\nexport default App;\n\n/*\n  useEffect((timestamp) => \n    { \n      console.log(\"insides\")\n      const ctx = canvasRef.current.getContext('2d')\n      \n      const updateFrame = () => {\n\n        if (!prevTimestamp) {\n          prevTimestamp.current = timestamp\n        }\n        \n        const deltaTime = (timestamp - prevTimestamp) / 1000 // convert into seconds\n        prevTimestamp.current = timestamp\n\n        let newBirds = birds.map(b => (\n          new Bird(b.x, b.y, b.velX, b.vely)\n          )\n        )\n        newBirds.forEach(b => {\n          let others = nearbyBirds(b, newBirds);\n          b.separate(others)\n          b.align(others)\n          b.cohere(others)\n          b.screenTurn(others)\n          b.update(deltaTime)\n          }\n        )\n        newBirds.forEach(b => b.update())\n\n        ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n        newBirds.forEach(b => {\n          ctx.beginPath();\n          ctx.arc(b.x, b.y, 20, 0, 2 * Math.PI); // Circle centered at (100, 100) with radius 20\n          ctx.fillStyle = 'blue'; // Fill color\n          ctx.fill(); // Fill the circle with the blue color\n          ctx.closePath(); // Close the path\n          }\n        )\n\n        setBirds(newBirds)\n        requestAnimationFrame(updateFrame)\n      }\n\n    updateFrame()\n    \n    }, birds)\n    */\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Bird","BIRDS_NUM","CANVAS_HEIGHT","CANVAS_WIDTH","nearbyBirds","jsxDEV","_jsxDEV","App","_s","initialBirds","Array","from","length","Math","random","birds","setBirds","canvasRef","prevTimestamp","console","log","forEach","b","timestamp","ctx","current","getContext","updateFrame","deltaTime","others","align","cohere","screenTurn","update","clearRect","beginPath","arc","x","y","PI","fillStyle","fill","closePath","requestAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","style","display","_c","$RefreshReg$"],"sources":["/home/yechan/imperial/side_projects/birds-flocking/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\n// import { motion } from 'framer-motion'\nimport './App.css'\n\nimport { Bird } from './Bird.js'\nimport { BIRDS_NUM, CANVAS_HEIGHT, CANVAS_WIDTH } from './constants'\nimport { nearbyBirds } from './utilities.js'\n\nfunction App() {\n\n  let initialBirds = Array.from({ length: BIRDS_NUM }, () => \n    new Bird(\n      Math.random() * CANVAS_WIDTH,\n      Math.random() * CANVAS_HEIGHT,\n      Math.random() * 30,\n      Math.random() * 30\n    )\n  )\n  const [birds, setBirds] = useState(initialBirds)\n  const canvasRef = useRef(null)\n  const prevTimestamp = useRef(null)\n\n  console.log(\"START HERERE\")\n        birds.forEach(b => {\n          if (!(b instanceof Bird)) {\n            console.log(\"NOT A BIRD: \", b)\n          }\n        })\n\n  /*\n  // initialisation - called only after the first render - since dependencies is empty list\n  useEffect(() => \n    {\n      let initialBirds = Array(new Bird(\n        Math.random() * CANVAS_WIDTH, Math.random() * CANVAS_HEIGHT, Math.random() * 30, Math.random() * 30\n      ), BIRDS_NUM)      \n\n      // after setBirds called, rendering\n      setBirds(initialBirds)\n    }, [])\n  */\n    // called everytime setBirds is called\n  useEffect((timestamp) => \n    { \n      console.log(\"insides\")\n      const ctx = canvasRef.current.getContext('2d')\n      \n      const updateFrame = () => {\n\n        if (!prevTimestamp) {\n          prevTimestamp.current = timestamp\n        }\n        \n        const deltaTime = (timestamp - prevTimestamp) / 1000 // convert into seconds\n        prevTimestamp.current = timestamp\n      \n        console.log(\"UNDERNEATH HERERE\")\n        birds.forEach(b => {\n          if (!(b instanceof Bird)) {\n            console.log(\"NOT A BIRD: \", b)\n          }\n        })\n        birds.forEach(b => {\n          let others = nearbyBirds(b, birds);\n          // b.separate(others);\n          b.align(others);\n          b.cohere(others);\n          b.screenTurn(others);\n          }\n        )\n        birds.forEach(b => b.update(deltaTime))\n\n        ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n        birds.forEach(b => {\n          ctx.beginPath();\n          ctx.arc(b.x, b.y, 20, 0, 2 * Math.PI); // Circle centered at (100, 100) with radius 20\n          ctx.fillStyle = 'blue'; // Fill color\n          ctx.fill(); // Fill the circle with the blue color\n          ctx.closePath(); // Close the path\n          }\n        )\n\n        // setBirds(newBirds)\n        requestAnimationFrame(updateFrame)\n      }\n\n    updateFrame()\n    \n    }, birds)\n\n\n  return (\n    <div className=\"App\">\n      <h1>React Animation Example</h1>\n      <canvas \n        ref = {canvasRef}\n        width = {CANVAS_WIDTH}\n        height = {CANVAS_HEIGHT}\n        style = {{ display: 'block' }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n\n/*\n  useEffect((timestamp) => \n    { \n      console.log(\"insides\")\n      const ctx = canvasRef.current.getContext('2d')\n      \n      const updateFrame = () => {\n\n        if (!prevTimestamp) {\n          prevTimestamp.current = timestamp\n        }\n        \n        const deltaTime = (timestamp - prevTimestamp) / 1000 // convert into seconds\n        prevTimestamp.current = timestamp\n\n        let newBirds = birds.map(b => (\n          new Bird(b.x, b.y, b.velX, b.vely)\n          )\n        )\n        newBirds.forEach(b => {\n          let others = nearbyBirds(b, newBirds);\n          b.separate(others)\n          b.align(others)\n          b.cohere(others)\n          b.screenTurn(others)\n          b.update(deltaTime)\n          }\n        )\n        newBirds.forEach(b => b.update())\n\n        ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n        newBirds.forEach(b => {\n          ctx.beginPath();\n          ctx.arc(b.x, b.y, 20, 0, 2 * Math.PI); // Circle centered at (100, 100) with radius 20\n          ctx.fillStyle = 'blue'; // Fill color\n          ctx.fill(); // Fill the circle with the blue color\n          ctx.closePath(); // Close the path\n          }\n        )\n\n        setBirds(newBirds)\n        requestAnimationFrame(updateFrame)\n      }\n\n    updateFrame()\n    \n    }, birds)\n    */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}