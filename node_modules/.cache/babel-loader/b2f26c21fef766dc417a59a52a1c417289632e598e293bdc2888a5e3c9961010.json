{"ast":null,"code":"export class Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  rotate(angle) {\n    // Calculate the rotated coordinates\n    const rotatedX = this.x * Math.cos(angle) - this.y * Math.sin(angle);\n    const rotatedY = this.x * Math.sin(angle) + this.y * Math.cos(angle);\n    return new Point(rotatedX, rotatedY);\n  }\n  transpose(dx, dy) {\n    return new Point(this.x + dx, this.y + dy);\n  }\n}","map":{"version":3,"names":["Point","constructor","x","y","rotate","angle","rotatedX","Math","cos","sin","rotatedY","transpose","dx","dy"],"sources":["/home/yechan/imperial/side_projects/birds-flocking/src/Point.js"],"sourcesContent":["export class Point {\n    constructor(\n        x,\n        y\n    ) {\n        this.x = x\n        this.y = y\n    }\n\n    rotate(angle) {\n\n        // Calculate the rotated coordinates\n        const rotatedX = this.x * Math.cos(angle) - this.y * Math.sin(angle);\n        const rotatedY = this.x * Math.sin(angle) + this.y * Math.cos(angle);\n        \n        return new Point(rotatedX, rotatedY);\n    } \n\n    transpose(dx, dy) {\n\n        return new Point(this.x + dx, this.y + dy)\n    }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,KAAK,CAAC;EACfC,WAAWA,CACPC,CAAC,EACDC,CAAC,EACH;IACE,IAAI,CAACD,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EACd;EAEAC,MAAMA,CAACC,KAAK,EAAE;IAEV;IACA,MAAMC,QAAQ,GAAG,IAAI,CAACJ,CAAC,GAAGK,IAAI,CAACC,GAAG,CAACH,KAAK,CAAC,GAAG,IAAI,CAACF,CAAC,GAAGI,IAAI,CAACE,GAAG,CAACJ,KAAK,CAAC;IACpE,MAAMK,QAAQ,GAAG,IAAI,CAACR,CAAC,GAAGK,IAAI,CAACE,GAAG,CAACJ,KAAK,CAAC,GAAG,IAAI,CAACF,CAAC,GAAGI,IAAI,CAACC,GAAG,CAACH,KAAK,CAAC;IAEpE,OAAO,IAAIL,KAAK,CAACM,QAAQ,EAAEI,QAAQ,CAAC;EACxC;EAEAC,SAASA,CAACC,EAAE,EAAEC,EAAE,EAAE;IAEd,OAAO,IAAIb,KAAK,CAAC,IAAI,CAACE,CAAC,GAAGU,EAAE,EAAE,IAAI,CAACT,CAAC,GAAGU,EAAE,CAAC;EAC9C;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}