{"ast":null,"code":"var _jsxFileName = \"/home/yechan/imperial/side_projects/birds-flocking/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\n// import { motion } from 'framer-motion'\nimport './App.css';\nimport { Bird } from './Bird.js';\nimport { BIRDS_NUM, CANVAS_HEIGHT, CANVAS_WIDTH } from './constants';\nimport { nearbyBirds } from './utilities.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let initialBirds = Array(new Bird(Math.random() * CANVAS_WIDTH, Math.random() * CANVAS_HEIGHT, Math.random() * 30, Math.random() * 30), BIRDS_NUM);\n  const [birds, setBirds] = useState(initialBirds);\n  const canvasRef = useRef(null);\n  const prevTimestamp = useRef(null);\n\n  /*\n  // initialisation - called only after the first render - since dependencies is empty list\n  useEffect(() => \n    {\n      let initialBirds = Array(new Bird(\n        Math.random() * CANVAS_WIDTH, Math.random() * CANVAS_HEIGHT, Math.random() * 30, Math.random() * 30\n      ), BIRDS_NUM)      \n       // after setBirds called, rendering\n      setBirds(initialBirds)\n    }, [])\n  */\n  // called everytime setBirds is called\n  useEffect(timestamp => {\n    console.log(\"insides\");\n    const ctx = canvasRef.current.getContext('2d');\n    const updateFrame = () => {\n      if (!prevTimestamp) {\n        prevTimestamp.current = timestamp;\n      }\n      const deltaTime = (timestamp - prevTimestamp) / 1000; // convert into seconds\n      prevTimestamp.current = timestamp;\n      let newBirds = birds.map(b => new Bird(b.x, b.y, b.velX, b.vely));\n      newBirds.forEach(b => {\n        let others = nearbyBirds(b, newBirds);\n        b.separate(others);\n        b.align(others);\n        b.cohere(others);\n        b.screenTurn(others);\n        b.update(deltaTime);\n      });\n      newBirds.forEach(b => b.update());\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      birds.forEach(b => {\n        ctx.beginPath();\n        ctx.arc(b.x, b.y, 20, 0, 2 * Math.PI); // Circle centered at (100, 100) with radius 20\n        ctx.fillStyle = 'blue'; // Fill color\n        ctx.fill(); // Fill the circle with the blue color\n        ctx.closePath(); // Close the path\n      });\n      requestAnimationFrame(updateFrame);\n    };\n    updateFrame();\n  }, birds);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Animation Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT,\n      style: {\n        display: 'block'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5K/hsN4B++bcT5Nf59J7ThOn1rY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Bird","BIRDS_NUM","CANVAS_HEIGHT","CANVAS_WIDTH","nearbyBirds","jsxDEV","_jsxDEV","App","_s","initialBirds","Array","Math","random","birds","setBirds","canvasRef","prevTimestamp","timestamp","console","log","ctx","current","getContext","updateFrame","deltaTime","newBirds","map","b","x","y","velX","vely","forEach","others","separate","align","cohere","screenTurn","update","clearRect","beginPath","arc","PI","fillStyle","fill","closePath","requestAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","style","display","_c","$RefreshReg$"],"sources":["/home/yechan/imperial/side_projects/birds-flocking/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\n// import { motion } from 'framer-motion'\nimport './App.css'\n\nimport { Bird } from './Bird.js'\nimport { BIRDS_NUM, CANVAS_HEIGHT, CANVAS_WIDTH } from './constants'\nimport { nearbyBirds } from './utilities.js'\n\nfunction App() {\n  \n  let initialBirds = Array(new Bird(\n    Math.random() * CANVAS_WIDTH, Math.random() * CANVAS_HEIGHT, Math.random() * 30, Math.random() * 30\n  ), BIRDS_NUM)  \n  const [birds, setBirds] = useState(initialBirds)\n  const canvasRef = useRef(null)\n  const prevTimestamp = useRef(null)\n\n  /*\n  // initialisation - called only after the first render - since dependencies is empty list\n  useEffect(() => \n    {\n      let initialBirds = Array(new Bird(\n        Math.random() * CANVAS_WIDTH, Math.random() * CANVAS_HEIGHT, Math.random() * 30, Math.random() * 30\n      ), BIRDS_NUM)      \n\n      // after setBirds called, rendering\n      setBirds(initialBirds)\n    }, [])\n  */\n    // called everytime setBirds is called\n  useEffect((timestamp) => \n    { \n      console.log(\"insides\")\n      const ctx = canvasRef.current.getContext('2d')\n      \n      const updateFrame = () => {\n\n        if (!prevTimestamp) {\n          prevTimestamp.current = timestamp\n        }\n        \n        const deltaTime = (timestamp - prevTimestamp) / 1000 // convert into seconds\n        prevTimestamp.current = timestamp\n\n        let newBirds = birds.map(b => (\n          new Bird(b.x, b.y, b.velX, b.vely)\n          )\n        )\n        newBirds.forEach(b => {\n          let others = nearbyBirds(b, newBirds);\n          b.separate(others)\n          b.align(others)\n          b.cohere(others)\n          b.screenTurn(others)\n          b.update(deltaTime)\n          }\n        )\n        newBirds.forEach(b => b.update())\n\n        ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n        birds.forEach(b => {\n          ctx.beginPath();\n          ctx.arc(b.x, b.y, 20, 0, 2 * Math.PI); // Circle centered at (100, 100) with radius 20\n          ctx.fillStyle = 'blue'; // Fill color\n          ctx.fill(); // Fill the circle with the blue color\n          ctx.closePath(); // Close the path\n          }\n        )\n\n        requestAnimationFrame(updateFrame)\n      }\n\n    updateFrame()\n    \n    }, birds)\n\n\n  return (\n    <div className=\"App\">\n      <h1>React Animation Example</h1>\n      <canvas \n        ref = {canvasRef}\n        width = {CANVAS_WIDTH}\n        height = {CANVAS_HEIGHT}\n        style = {{ display: 'block' }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D;AACA,OAAO,WAAW;AAElB,SAASC,IAAI,QAAQ,WAAW;AAChC,SAASC,SAAS,EAAEC,aAAa,EAAEC,YAAY,QAAQ,aAAa;AACpE,SAASC,WAAW,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,IAAIC,YAAY,GAAGC,KAAK,CAAC,IAAIV,IAAI,CAC/BW,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGT,YAAY,EAAEQ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGV,aAAa,EAAES,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAED,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EACnG,CAAC,EAAEX,SAAS,CAAC;EACb,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAACW,YAAY,CAAC;EAChD,MAAMM,SAAS,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMiB,aAAa,GAAGjB,MAAM,CAAC,IAAI,CAAC;;EAElC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEI;EACFF,SAAS,CAAEoB,SAAS,IAClB;IACEC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,MAAMC,GAAG,GAAGL,SAAS,CAACM,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAE9C,MAAMC,WAAW,GAAGA,CAAA,KAAM;MAExB,IAAI,CAACP,aAAa,EAAE;QAClBA,aAAa,CAACK,OAAO,GAAGJ,SAAS;MACnC;MAEA,MAAMO,SAAS,GAAG,CAACP,SAAS,GAAGD,aAAa,IAAI,IAAI,EAAC;MACrDA,aAAa,CAACK,OAAO,GAAGJ,SAAS;MAEjC,IAAIQ,QAAQ,GAAGZ,KAAK,CAACa,GAAG,CAACC,CAAC,IACxB,IAAI3B,IAAI,CAAC2B,CAAC,CAACC,CAAC,EAAED,CAAC,CAACE,CAAC,EAAEF,CAAC,CAACG,IAAI,EAAEH,CAAC,CAACI,IAAI,CAEnC,CAAC;MACDN,QAAQ,CAACO,OAAO,CAACL,CAAC,IAAI;QACpB,IAAIM,MAAM,GAAG7B,WAAW,CAACuB,CAAC,EAAEF,QAAQ,CAAC;QACrCE,CAAC,CAACO,QAAQ,CAACD,MAAM,CAAC;QAClBN,CAAC,CAACQ,KAAK,CAACF,MAAM,CAAC;QACfN,CAAC,CAACS,MAAM,CAACH,MAAM,CAAC;QAChBN,CAAC,CAACU,UAAU,CAACJ,MAAM,CAAC;QACpBN,CAAC,CAACW,MAAM,CAACd,SAAS,CAAC;MACnB,CACF,CAAC;MACDC,QAAQ,CAACO,OAAO,CAACL,CAAC,IAAIA,CAAC,CAACW,MAAM,CAAC,CAAC,CAAC;MAEjClB,GAAG,CAACmB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEpC,YAAY,EAAED,aAAa,CAAC;MAChDW,KAAK,CAACmB,OAAO,CAACL,CAAC,IAAI;QACjBP,GAAG,CAACoB,SAAS,CAAC,CAAC;QACfpB,GAAG,CAACqB,GAAG,CAACd,CAAC,CAACC,CAAC,EAAED,CAAC,CAACE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAGlB,IAAI,CAAC+B,EAAE,CAAC,CAAC,CAAC;QACvCtB,GAAG,CAACuB,SAAS,GAAG,MAAM,CAAC,CAAC;QACxBvB,GAAG,CAACwB,IAAI,CAAC,CAAC,CAAC,CAAC;QACZxB,GAAG,CAACyB,SAAS,CAAC,CAAC,CAAC,CAAC;MACjB,CACF,CAAC;MAEDC,qBAAqB,CAACvB,WAAW,CAAC;IACpC,CAAC;IAEHA,WAAW,CAAC,CAAC;EAEb,CAAC,EAAEV,KAAK,CAAC;EAGX,oBACEP,OAAA;IAAKyC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1C,OAAA;MAAA0C,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC9C,OAAA;MACE+C,GAAG,EAAItC,SAAU;MACjBuC,KAAK,EAAInD,YAAa;MACtBoD,MAAM,EAAIrD,aAAc;MACxBsD,KAAK,EAAI;QAAEC,OAAO,EAAE;MAAQ;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5C,EAAA,CAhFQD,GAAG;AAAAmD,EAAA,GAAHnD,GAAG;AAkFZ,eAAeA,GAAG;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}