{"ast":null,"code":"var _jsxFileName = \"/home/yechan/imperial/side_projects/birds-flocking/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport { Bird } from './Bird.js';\nimport { BIRD_COLOR, BACKGROUND_COLOR, BIRDS_NUM, CANVAS_HEIGHT, CANVAS_WIDTH, RADIUS, protectedRangeDistance, visibleRangeDistance } from './constants';\nimport { nearbyBirds } from './utilities.js';\n// import { color } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialize birds\n  const initialBirds = Array.from({\n    length: BIRDS_NUM\n  }, () => new Bird(Math.random() * CANVAS_WIDTH, Math.random() * CANVAS_HEIGHT, Math.random() * 30 - 15,\n  // Adjusted to include negative velocities\n  Math.random() * 30 - 15 // Adjusted to include negative velocities\n  ));\n  const [birds, setBirds] = useState(initialBirds);\n  const canvasRef = useRef(null);\n  const prevTimestamp = useRef(0);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      console.error('Failed to get canvas context');\n      return;\n    }\n    const updateFrame = timestamp => {\n      if (!prevTimestamp.current) {\n        prevTimestamp.current = timestamp;\n      }\n      const deltaTime = (timestamp - prevTimestamp.current) / 1000; // Convert to seconds\n      prevTimestamp.current = timestamp;\n\n      // Update birds' states\n      const updatedBirds = birds.map(bird => {\n        let inProtectedRange = nearbyBirds(bird, birds, protectedRangeDistance);\n        let inVisibleRange = nearbyBirds(bird, birds, visibleRangeDistance);\n        bird.separate(inProtectedRange);\n        bird.align(inVisibleRange);\n        bird.cohere(inVisibleRange);\n        bird.screenTurn();\n        return bird;\n      });\n\n      // console.log(\"drawing\")\n\n      // Clear the canvas and redraw birds\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      ctx.fillStyle = BACKGROUND_COLOR;\n      ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      updatedBirds.forEach(bird => {\n        bird.update(deltaTime);\n        ctx.beginPath();\n        ctx.arc(bird.x, bird.y, RADIUS, 0, 2 * Math.PI); // Draw a circle with radius 20\n        ctx.fillStyle = BIRD_COLOR; // Fill color\n        ctx.fill(); // Fill the circle with the blue color\n        ctx.closePath(); // Close the path\n      });\n\n      // Update the state with the new birds' positions\n      setBirds(updatedBirds);\n\n      // Request the next frame\n      requestAnimationFrame(updateFrame);\n    };\n\n    // Start the animation loop\n    requestAnimationFrame(updateFrame);\n\n    // Cleanup function\n    return () => {\n      prevTimestamp.current = 0; // Reset timestamp on cleanup\n    };\n  }, []); // Empty array to ensure this effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Animation Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"canvas\",\n        ref: canvasRef,\n        width: CANVAS_WIDTH,\n        height: CANVAS_HEIGHT,\n        style: {\n          display: 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5K/hsN4B++bcT5Nf59J7ThOn1rY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Bird","BIRD_COLOR","BACKGROUND_COLOR","BIRDS_NUM","CANVAS_HEIGHT","CANVAS_WIDTH","RADIUS","protectedRangeDistance","visibleRangeDistance","nearbyBirds","jsxDEV","_jsxDEV","App","_s","initialBirds","Array","from","length","Math","random","birds","setBirds","canvasRef","prevTimestamp","canvas","current","ctx","getContext","console","error","updateFrame","timestamp","deltaTime","updatedBirds","map","bird","inProtectedRange","inVisibleRange","separate","align","cohere","screenTurn","clearRect","fillStyle","fillRect","forEach","update","beginPath","arc","x","y","PI","fill","closePath","requestAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","style","display","_c","$RefreshReg$"],"sources":["/home/yechan/imperial/side_projects/birds-flocking/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport { Bird } from './Bird.js';\nimport { BIRD_COLOR, BACKGROUND_COLOR, BIRDS_NUM, CANVAS_HEIGHT, CANVAS_WIDTH, RADIUS, protectedRangeDistance, visibleRangeDistance } from './constants';\nimport { nearbyBirds } from './utilities.js';\n// import { color } from 'framer-motion';\n\nfunction App() {\n  // Initialize birds\n  const initialBirds = Array.from({ length: BIRDS_NUM }, () => \n    new Bird(\n      Math.random() * CANVAS_WIDTH,\n      Math.random() * CANVAS_HEIGHT,\n      Math.random() * 30 - 15, // Adjusted to include negative velocities\n      Math.random() * 30 - 15  // Adjusted to include negative velocities\n    )\n  );\n  \n  const [birds, setBirds] = useState(initialBirds);\n  const canvasRef = useRef(null);\n  const prevTimestamp = useRef(0);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      console.error('Failed to get canvas context');  \n      return;\n    }\n\n    const updateFrame = (timestamp) => {\n      if (!prevTimestamp.current) {\n        prevTimestamp.current = timestamp;\n      }\n      \n      const deltaTime = (timestamp - prevTimestamp.current) / 1000; // Convert to seconds\n      prevTimestamp.current = timestamp;\n\n      // Update birds' states\n      const updatedBirds = birds.map(bird => {\n        let inProtectedRange = nearbyBirds(bird, birds, protectedRangeDistance)\n        let inVisibleRange = nearbyBirds(bird, birds, visibleRangeDistance);\n        bird.separate(inProtectedRange);\n        bird.align(inVisibleRange);\n        bird.cohere(inVisibleRange);\n        bird.screenTurn();\n        return bird;\n      });\n\n      // console.log(\"drawing\")\n\n      // Clear the canvas and redraw birds\n      ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n      ctx.fillStyle = BACKGROUND_COLOR\n      ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)\n\n      updatedBirds.forEach(bird => {\n        bird.update(deltaTime)\n        ctx.beginPath();\n        ctx.arc(bird.x, bird.y, RADIUS, 0, 2 * Math.PI); // Draw a circle with radius 20\n        ctx.fillStyle = BIRD_COLOR; // Fill color\n        ctx.fill(); // Fill the circle with the blue color\n        ctx.closePath(); // Close the path\n      });\n\n      // Update the state with the new birds' positions\n      setBirds(updatedBirds);\n\n      // Request the next frame\n      requestAnimationFrame(updateFrame);\n    };\n\n    // Start the animation loop\n    requestAnimationFrame(updateFrame);\n\n    // Cleanup function\n    return () => {\n      prevTimestamp.current = 0; // Reset timestamp on cleanup\n    };\n  }, []); // Empty array to ensure this effect runs only once\n\n  return (\n    <div className=\"App\">\n      <h1>React Animation Example</h1>\n      <div className=\"canvas-wrapper\">\n        <canvas className=\"canvas\"\n          ref={canvasRef}\n          width={CANVAS_WIDTH}\n          height={CANVAS_HEIGHT}\n          style={{ display: 'block' }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAClB,SAASC,IAAI,QAAQ,WAAW;AAChC,SAASC,UAAU,EAAEC,gBAAgB,EAAEC,SAAS,EAAEC,aAAa,EAAEC,YAAY,EAAEC,MAAM,EAAEC,sBAAsB,EAAEC,oBAAoB,QAAQ,aAAa;AACxJ,SAASC,WAAW,QAAQ,gBAAgB;AAC5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAMC,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEd;EAAU,CAAC,EAAE,MACrD,IAAIH,IAAI,CACNkB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGd,YAAY,EAC5Ba,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGf,aAAa,EAC7Bc,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE;EAAE;EACzBD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAE;EAC3B,CACF,CAAC;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAACgB,YAAY,CAAC;EAChD,MAAMQ,SAAS,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMwB,aAAa,GAAGxB,MAAM,CAAC,CAAC,CAAC;EAE/BF,SAAS,CAAC,MAAM;IACd,MAAM2B,MAAM,GAAGF,SAAS,CAACG,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,IAAI,CAACD,GAAG,EAAE;MACRE,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC7C;IACF;IAEA,MAAMC,WAAW,GAAIC,SAAS,IAAK;MACjC,IAAI,CAACR,aAAa,CAACE,OAAO,EAAE;QAC1BF,aAAa,CAACE,OAAO,GAAGM,SAAS;MACnC;MAEA,MAAMC,SAAS,GAAG,CAACD,SAAS,GAAGR,aAAa,CAACE,OAAO,IAAI,IAAI,CAAC,CAAC;MAC9DF,aAAa,CAACE,OAAO,GAAGM,SAAS;;MAEjC;MACA,MAAME,YAAY,GAAGb,KAAK,CAACc,GAAG,CAACC,IAAI,IAAI;QACrC,IAAIC,gBAAgB,GAAG3B,WAAW,CAAC0B,IAAI,EAAEf,KAAK,EAAEb,sBAAsB,CAAC;QACvE,IAAI8B,cAAc,GAAG5B,WAAW,CAAC0B,IAAI,EAAEf,KAAK,EAAEZ,oBAAoB,CAAC;QACnE2B,IAAI,CAACG,QAAQ,CAACF,gBAAgB,CAAC;QAC/BD,IAAI,CAACI,KAAK,CAACF,cAAc,CAAC;QAC1BF,IAAI,CAACK,MAAM,CAACH,cAAc,CAAC;QAC3BF,IAAI,CAACM,UAAU,CAAC,CAAC;QACjB,OAAON,IAAI;MACb,CAAC,CAAC;;MAEF;;MAEA;MACAT,GAAG,CAACgB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAErC,YAAY,EAAED,aAAa,CAAC;MAChDsB,GAAG,CAACiB,SAAS,GAAGzC,gBAAgB;MAChCwB,GAAG,CAACkB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEvC,YAAY,EAAED,aAAa,CAAC;MAE/C6B,YAAY,CAACY,OAAO,CAACV,IAAI,IAAI;QAC3BA,IAAI,CAACW,MAAM,CAACd,SAAS,CAAC;QACtBN,GAAG,CAACqB,SAAS,CAAC,CAAC;QACfrB,GAAG,CAACsB,GAAG,CAACb,IAAI,CAACc,CAAC,EAAEd,IAAI,CAACe,CAAC,EAAE5C,MAAM,EAAE,CAAC,EAAE,CAAC,GAAGY,IAAI,CAACiC,EAAE,CAAC,CAAC,CAAC;QACjDzB,GAAG,CAACiB,SAAS,GAAG1C,UAAU,CAAC,CAAC;QAC5ByB,GAAG,CAAC0B,IAAI,CAAC,CAAC,CAAC,CAAC;QACZ1B,GAAG,CAAC2B,SAAS,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC;;MAEF;MACAhC,QAAQ,CAACY,YAAY,CAAC;;MAEtB;MACAqB,qBAAqB,CAACxB,WAAW,CAAC;IACpC,CAAC;;IAED;IACAwB,qBAAqB,CAACxB,WAAW,CAAC;;IAElC;IACA,OAAO,MAAM;MACXP,aAAa,CAACE,OAAO,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEd,OAAA;IAAK4C,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7C,OAAA;MAAA6C,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCjD,OAAA;MAAK4C,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7B7C,OAAA;QAAQ4C,SAAS,EAAC,QAAQ;QACxBM,GAAG,EAAEvC,SAAU;QACfwC,KAAK,EAAEzD,YAAa;QACpB0D,MAAM,EAAE3D,aAAc;QACtB4D,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAQ;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/C,EAAA,CAvFQD,GAAG;AAAAsD,EAAA,GAAHtD,GAAG;AAyFZ,eAAeA,GAAG;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}